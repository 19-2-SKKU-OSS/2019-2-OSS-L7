<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Algorithm | SKKU OSS L7</title>
 <link href="http://localhost:4000/2019-2-OSS-L7/atom.xml" rel="self"/>
 <link href="http://localhost:4000/2019-2-OSS-L7/"/>
 <updated>2019-12-08T00:02:54+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>guswh11</name>
   <email>guswh11@naver.com</email>
 </author>

 
 <entry>
   <title>가장 아름다운 파이썬 알고리즘 라이브러리</title>
   <link href="http://localhost:4000/2019-2-OSS-L7/introduction"/>
   <updated>2019-12-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/introduction</id>
   <content type="html">&lt;body&gt;
	&lt;h1 class=&quot;ui header&quot;&gt;Algorithm&lt;/h1&gt;
	&lt;img src=&quot;https://raw.githubusercontent.com/keon/algorithms/master/docs/source/_static/logo/logotype1blue.png&quot;
		style=&quot;width: 100%;&quot;&gt;
	&lt;p&gt;
		이 프로젝트는 자료구조와 알고리즘을 파이썬으로 작성한 것입니다. &lt;br&gt;
		파이썬의 간결함을 토대로 가장 깔끔한 코드를 만드는 것이 목표입니다. &lt;br&gt;
	&lt;/p&gt;
	&lt;h2 class=&quot;ui header&quot;&gt;진행 상황&lt;/h3&gt;
	&lt;div class=&quot;ui two statistics&quot;&gt;
		&lt;div class=&quot;statistic&quot;&gt;
			&lt;div class=&quot;value&quot; id=&quot;num-data-structures&quot;&gt;
				0
			&lt;/div&gt;
			&lt;div class=&quot;label&quot;&gt;
				Data Structures
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div class=&quot;statistic&quot;&gt;
			&lt;div class=&quot;value&quot; id=&quot;num-algorithms&quot;&gt;
				0
			&lt;/div&gt;
			&lt;div class=&quot;label&quot;&gt;
				Algorithms
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;p&gt;
		현재 12개의 자료구조와 약 150개의 알고리즘이 구현되어 있습니다. &lt;br&gt;
	&lt;/p&gt;
	&lt;h1 class=&quot;ui header&quot;&gt;팀원 소개&lt;/h1&gt;
	&lt;p&gt;
		저희 팀원을 소개합니다!
	&lt;/p&gt;
	&lt;div class=&quot;ui grid&quot;&gt;
		&lt;div class=&quot;eight wide column&quot;&gt;
			&lt;h3 class=&quot;ui header&quot;&gt;나종명&lt;/h2&gt;
			&lt;p&gt;
				
			&lt;/p&gt;
		&lt;/div&gt;
		&lt;div class=&quot;eight wide column&quot;&gt;
			&lt;h3 class=&quot;ui header&quot;&gt;조현진&lt;/h2&gt;
			&lt;p&gt;
				
			&lt;/p&gt;
		&lt;/div&gt;
		&lt;div class=&quot;eight wide column&quot;&gt;
			&lt;h3 class=&quot;ui header&quot;&gt;손병호&lt;/h2&gt;
			&lt;p&gt;
				
			&lt;/p&gt;
		&lt;/div&gt;
		&lt;div class=&quot;eight wide column&quot;&gt;
			&lt;h3 class=&quot;ui header&quot;&gt;박찬혁&lt;/h2&gt;
			&lt;p&gt;
				
			&lt;/p&gt;
		&lt;/div&gt;
		&lt;div class=&quot;eight wide column&quot;&gt;
			&lt;h3 class=&quot;ui header&quot;&gt;장진우&lt;/h2&gt;
			&lt;p&gt;
				
			&lt;/p&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;h1 class=&quot;ui header&quot;&gt;팀 활동&lt;/h1&gt;
	&lt;script&gt;
		const statistics = {
			amount			: 200,
			data_structures	: 12,
			algorithms		: 150,
			increasing		: false
		};

		function isScrolled(scroll) {
			return document.body.scrollTop &gt; scroll ||
				document.documentElement.scrollTop &gt; scroll;
		}

		window.onscroll = () =&gt; {
			const animation_time = 1000;

			if (!statistics.increasing &amp;&amp; isScrolled(statistics.amount)) {
				statistics.increasing = true;
				let data_structures = setInterval(() =&gt; {
					let num = document.getElementById('num-data-structures');
					if (Number(num.textContent) &lt; statistics.data_structures) {
						num.textContent = Number(num.innerText) + 1;
					} else {
						clearInterval(data_structures);
					}
				}, animation_time / statistics.data_structures);
				let algorithms = setInterval(() =&gt; {
					let num = document.getElementById('num-algorithms');
					if (Number(num.textContent) &lt; statistics.algorithms) {
						num.textContent = Number(num.innerText) + 1;
					}
					else {
						clearInterval(algorithms);
					}
				}, animation_time / statistics.algorithms);
			}
		};
	&lt;/script&gt;
&lt;/body&gt;</content>
 </entry>
 

</feed>
